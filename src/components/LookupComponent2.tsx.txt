import React, { useState } from "react";
import { getMpn } from "@/util/mpn.lookup";

interface MyComponentProps {
  testtype: string;
}

const LookupComponent: React.FC<MyComponentProps> = ({ testtype }) => {
  const [inputLarge, setInputLarge] = useState(0);
  const [inputSmall, setInputSmall] = useState(0);

  const handleChangeLarge = (event: React.ChangeEvent<HTMLInputElement>) => {
    setInputLarge(Number(event.target.value));
  };

  const handleChangeSmall = (event: React.ChangeEvent<HTMLInputElement>) => {
    setInputSmall(Number(event.target.value));
  };

  const mpnVal =
    getMpn(testtype, { large: inputLarge, small: inputSmall }) || [];

  const renderDiv = () => {
    let maxLarge = 51,
      maxSmall = 0,
      header = "",
      subHeader = "";

    if (testtype === "quanti") {
      maxLarge = 51;
      header = "QuantiTray® MPN";
      subHeader = "Positive Wells";
    } else if (testtype === "quanti2k") {
      maxLarge = 49;
      maxSmall = 49;
      header = "QuantiTray2000® MPN";
      subHeader = "Positive Wells";
    } else if (testtype === "legiolert") {
      maxLarge = 6;
      maxSmall = 90;
      header = "Legiolert MPN";
      subHeader = "Positive Wells";
    }

    return (
      <div>
        <h1
          data-testid={`${testtype}-header`}
          className="text-center text-xl pb-4 pt-4"
        >
          {header}
        </h1>
        <h3 data-testid="pos-well-title" className="text-center text-xl pb-4">
          {subHeader}
        </h3>
        <div className="flex flex-row space-x-10 pb-6 mx-6">
          <div>
            <p>Large</p>
            <input
              type="numeric"
              min={0}
              max={maxLarge}
              value={inputLarge}
              onChange={handleChangeLarge}
              className="w-1/2 text-2xl px-4 py-2 border-2 border-gray-300 rounded-md focus:outline-none focus:ring-blue-5 mx-10 mb-6"
            />
          </div>
          {maxSmall > 0 && (
            <div>
              <p>Small</p>
              <input
                type="numeric"
                min={0}
                max={maxSmall}
                value={inputSmall}
                onChange={handleChangeSmall}
                className="w-1/2 text-2xl px-4 py-2 border-2 border-gray-300 rounded-md focus:outline-none focus:ring-blue-5 mx-10 mb-6"
              />
            </div>
          )}
        </div>
        {mpnVal.length > 0 && (
          <>
            <h1 className="text-xl mx-6 pb-4">MPN : {mpnVal[0]}</h1>
            <div className="text-lg mx-6 pb-2">95% Confidence</div>
            <div className="flex row space-x-1.5 mx-1">
              <div>Low: {mpnVal[1]}</div>
              <div>High: {mpnVal[2]}</div>
            </div>
          </>
        )}
      </div>
    );
  };

  return <>{renderDiv()}</>;
};

export default LookupComponent;
